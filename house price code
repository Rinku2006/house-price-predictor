import pandas as pd
import numpy as np
d=pd.read_csv("house.csv")
d.drop(columns=['area_type','availability','society','balcony'],inplace=True)
d['loc']=d['loc'].fillna('Sarjapur Road')
d['size']=d['size'].fillna('2 BHK')
d['bhk']=d['size'].str.split().str.get(0).astype(int)
def convert(x):
    temp=x.split('-')
    if len(temp)==2:
        return(float(temp[0])+float(temp[1]))/2
    try:
        return float(x)
    except:
        return None
d['total_sqft']=d['total_sqft'].apply(convert)
d['price_per_sqft']=d['price']*100000/d['total_sqft']
d['loc']=d['loc'].apply(lambda x: x.strip())
loc_count=d['loc'].value_counts()
loc_count_less_10=loc_count[loc_count<=10]
loc_count_less_10
d['loc']=d['loc'].apply(lambda x: 'other' if x in loc_count_less_10 else x)
def remove_outliners_sqft(df):
    df_output=pd.dFrame()
    for key,subdf in df.groupby('loc'):
        m=np.mean(subdf.price_per_sqft)
        st=np.std(subdf.price_per_sqft)
        gen_df=subdf[(subdf.price_per_sqft > (m-st)) & (subdf.price_per_sqft <= (m+st))]
        df_output=pd.concat([df_output,gen_df],ignore_index=True)
    return df_output
d=remove_outliners_sqft(d)
d=bhk_outliner_remover(d)
d.drop(columns=['size','price_per_sqft'],inplace=True)
X=d.drop(columns=['price'])
y=d['price']
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression,Lasso,Ridge
from sklearn.preprocessing import OneHotEncoder,StandardScaler
from sklearn.compose import make_column_transformer
from sklearn.pipeline import make_pipeline
from sklearn.metrics import r2_score
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)
scaler=StandardScaler()
lr=LinearRegression()
pipe=make_pipeline(column_trans,scaler,lr)
pipe.fit(X_train,y_train)
pipe=make_pipeline(column_trans,scaler,ridge)
import pickle
pickle.dump(pipe,open('house.pkl','wb'))
